#!/bin/zsh
# Use vim cli mode
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history

# Backspace and ^h working even after returning from command mode
bindkey '^?' backward-delete-char
bindkey '^H' backward-delete-char

# ctrl-w and ctrl-backspace delete the previous word in insert mode.
bindkey '^W'  backward-kill-word
#bindkey '^\b' backward-kill-word

# ctrl-r starts searching history backward
bindkey '^R' history-incremental-search-backward

# Make arrow keys and jk search history
bindkey -a 'j' down-line-or-search
bindkey -a 'k' up-line-or-search
bindkey -a "^[[B" down-line-or-search
bindkey -a "^[[A" up-line-or-search
bindkey "^[[B" down-line-or-search
bindkey "^[[A" up-line-or-search

# Assume dvorak layout for spelling corrections
setopt dvorak

# Make completion menu smaller
setopt list_packed

# Use OS locking when writing to the history file. Might have better
# performance, but might also not work.
setopt hist_fcntl_lock

# Enable shorthand for loops
setopt short_loops

# ctrl-s will no longer freeze the terminal. From grml-zsh-config.
stty erase "^?"

# Eliminate the wait time after pressing escape
KEYTIMEOUT=1

# Increase history size (default was 5000)
HISTSIZE=100000

# Toggle stopping programs with ^Z
function fancy_ctrl_z {
    if [[ $#BUFFER -eq 0 ]]; then
        BUFFER="fg"
        zle accept-line -w
    else
        zle push-input -w
        zle clear-screen -w
    fi
}
zle -N fancy_ctrl_z
bindkey '^Z' fancy_ctrl_z
bindkey -a '^Z' fancy_ctrl_z

# Aliases
alias cb='popd 1> /dev/null' # silent popd
alias :q=exit
alias hibernate='sudo systemctl hibernate'
alias cal='cal -m' # cal with monday as the week's first day
alias bc='bc -lq' # bc with floats, without header
alias -g dd='dd status=progress'
alias rm='rm -I'
alias vim="$VISUAL"
alias vi="$VISUAL"
if [[ "$VISUAL" =~ "vim" ]]; then
    alias vimdiff="$VISUAL -d"
fi
alias gdb='gdb -q' # Hide the license header
alias cgdb='cuda-gdb -q' # Hide the license header
if whence nvim &> /dev/null; then
    alias man='MANPAGER="nvim +Man!" man'
fi

function dotfiles {
    git --git-dir="$HOME/.dotfiles/" --work-tree="$HOME" $@
}

function g {
    if [[ $# -eq 0 ]]; then
        gdb
        return
    fi

    local prg="$1"
    shift

    if ! [[ -f "$prg" ]]; then
        echo "$prg: No such file" 1>&2
        return 1
    fi

    gdb "$prg" -ex "run $*"
}

# mkdir and cd
function mcdir {
    mkdir -p -- "$1" &&
    cd -P -- "$1"
}

# Base16 Shell
BASE16_SHELL="$HOME/.dotfiles-submodules/base16-shell/"
[ -n "$PS1" ] \
    && [ -s "$BASE16_SHELL/profile_helper.sh" ] \
    && eval "$("$BASE16_SHELL/profile_helper.sh")"

# just type '...' to get '../..'
function rationalise-dot {
    local MATCH
    if [[ $LBUFFER =~ '(^|/| |	|'$'\n''|\||;|&)\.\.$' ]]; then
        LBUFFER+=/
        zle self-insert
        zle self-insert
    else
        zle self-insert
    fi
}
zle -N rationalise-dot
bindkey . rationalise-dot
# without this, typing a . aborts incremental history search
bindkey -M isearch . self-insert

# Make X applications work in WSL 2
if [[ $(< /proc/version) =~ microsoft ]] {
    wsl=1
    export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
    export LIBGL_ALWAYS_INDIRECT=1
    dbus_status=$(service dbus status)
    if [[ $dbus_status = *"is not running"* ]] {
      sudo service dbus --full-restart
    }
}

# Set prompt color according to host
# Also affects the color of the mode indicator
hostname="$(uname -n)"
prompt_color=blue
case "$hostname" {
    dt|lt) prompt_color=blue;;
    pi)    prompt_color=green;;
    tv)    prompt_color=yellow;;
}
zstyle ':prompt:grml:*:items:user' pre "%B%F{$prompt_color}"

# Function to add mode to the right prompt
function zle-line-init zle-keymap-select {
    case "$KEYMAP" in
        vicmd) RPS1='%B%F{red}NORMAL%b%f';;
        main)  RPS1="%F{$prompt_color}INSERT%f";;
        *) RPS1='';;
    esac
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Plugins
source ~/.dotfiles-submodules/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.dotfiles-submodules/fzf/shell/key-bindings.zsh
source ~/.dotfiles-submodules/fzf/shell/completion.zsh
source ~/.dotfiles-submodules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
if ! [[ -n "$wsl" ]] {
    source ~/.dotfiles-submodules/zsh-notify/notify.plugin.zsh
}

zstyle ':notify:*' success-icon "$HOME/.dotfiles-extra/pictures/Pog.png"
zstyle ':notify:*' error-icon "$HOME/.dotfiles-extra/pictures/Nog.png"
zstyle ':notify:*' command-complete-timeout 15
zstyle ':notify:*' expire-time 10000
zstyle ':notify:*' enable-on-ssh yes
zstyle ':notify:*' success-title 'Command succeeded after #{time_elapsed}'
zstyle ':notify:*' error-title 'Command failed after #{time_elapsed}'
